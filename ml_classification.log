
==== MODEL TRAINING RESULTS ====

Logistic Regression Results (Failure Detection Focus):
Accuracy: 0.7778
Recall (Failure Class): 0.7778
Precision (Failure Class): 0.2800
F1 Score (Failure Class): 0.4118
Confusion Matrix: 
[[ 7  2]
 [18 92]]
Classification Report: 
              precision    recall  f1-score   support

           0       0.28      0.78      0.41         9
           1       0.98      0.84      0.90       110

    accuracy                           0.83       119
   macro avg       0.63      0.81      0.66       119
weighted avg       0.93      0.83      0.86       119


Random Forest Results (Failure Detection Focus):
Accuracy: 0.4444
Recall (Failure Class): 0.4444
Precision (Failure Class): 0.5000
F1 Score (Failure Class): 0.4706
Confusion Matrix: 
[[  4   5]
 [  4 106]]
Classification Report: 
              precision    recall  f1-score   support

           0       0.50      0.44      0.47         9
           1       0.95      0.96      0.96       110

    accuracy                           0.92       119
   macro avg       0.73      0.70      0.71       119
weighted avg       0.92      0.92      0.92       119


XGBoost Results (Failure Detection Focus):
Accuracy: 0.3333
Recall (Failure Class): 0.3333
Precision (Failure Class): 0.7500
F1 Score (Failure Class): 0.4615
Confusion Matrix: 
[[  3   6]
 [  1 109]]
Classification Report: 
              precision    recall  f1-score   support

           0       0.75      0.33      0.46         9
           1       0.95      0.99      0.97       110

    accuracy                           0.94       119
   macro avg       0.85      0.66      0.72       119
weighted avg       0.93      0.94      0.93       119


Random Forest Feature Importances:
                      Feature  Importance
0          PyComplexityMetric    0.356174
2         AreaMetricEstimator    0.266177
1     MeanAreaMetricEstimator    0.208418
3  ApertureIrregularityMetric    0.169231

XGBoost Feature Importances:
                      Feature  Importance
0          PyComplexityMetric    0.318976
2         AreaMetricEstimator    0.264133
1     MeanAreaMetricEstimator    0.224519
3  ApertureIrregularityMetric    0.192372

==== THRESHOLD OPTIMIZATION ====
Threshold 0.10: Recall 0.0000, Precision 0.0000, F1 0.0000
Threshold 0.15: Recall 0.0000, Precision 0.0000, F1 0.0000
Threshold 0.20: Recall 0.0000, Precision 0.0000, F1 0.0000
Threshold 0.25: Recall 0.0000, Precision 0.0000, F1 0.0000
Threshold 0.30: Recall 0.0000, Precision 0.0000, F1 0.0000
Threshold 0.35: Recall 0.1111, Precision 0.0175, F1 0.0303
Threshold 0.40: Recall 0.1111, Precision 0.0128, F1 0.0230
Threshold 0.45: Recall 0.2222, Precision 0.0220, F1 0.0400
Threshold 0.50: Recall 0.2222, Precision 0.0213, F1 0.0388
Threshold 0.55: Recall 0.3333, Precision 0.0303, F1 0.0556
Threshold 0.60: Recall 0.4444, Precision 0.0392, F1 0.0721
Threshold 0.65: Recall 0.4444, Precision 0.0392, F1 0.0721
Threshold 0.70: Recall 0.5556, Precision 0.0476, F1 0.0877
Threshold 0.75: Recall 0.6667, Precision 0.0545, F1 0.1008
Threshold 0.80: Recall 0.7778, Precision 0.0625, F1 0.1157
Threshold 0.85: Recall 0.8889, Precision 0.0696, F1 0.1290
Threshold 0.90: Recall 1.0000, Precision 0.0769, F1 0.1429
Best threshold for recall: 0.90 (recall = 1.0000)

==== INDIVIDUAL FEATURE EVALUATION ====

==== FEATURE EVALUATION ACROSS MULTIPLE MODELS ====

--- Model: LogisticRegression ---

PyComplexityMetric:
  Accuracy: 0.6975
  Recall (Failure Class): 0.7778
  Precision (Failure Class): 0.1707
  F1 (Failure Class): 0.2800
  AUC: 0.7404
  Best threshold (F1): 0.75 (F1 = 0.1440)
  Best threshold (Recall): 0.75 (Recall = 1.0000)
  Optimal cutoff from ROC: 0.6005

MeanAreaMetricEstimator:
  Accuracy: 0.6387
  Recall (Failure Class): 0.7778
  Precision (Failure Class): 0.1458
  F1 (Failure Class): 0.2456
  AUC: 0.7343
  Best threshold (F1): 0.20 (F1 = 0.1538)
  Best threshold (Recall): 0.80 (Recall = 1.0000)
  Optimal cutoff from ROC: 0.6178

AreaMetricEstimator:
  Accuracy: 0.6218
  Recall (Failure Class): 0.7778
  Precision (Failure Class): 0.1400
  F1 (Failure Class): 0.2373
  AUC: 0.6980
  Best threshold (F1): 0.20 (F1 = 0.2353)
  Best threshold (Recall): 0.70 (Recall = 1.0000)
  Optimal cutoff from ROC: 0.6286

ApertureIrregularityMetric:
  Accuracy: 0.3697
  Recall (Failure Class): 0.4444
  Precision (Failure Class): 0.0541
  F1 (Failure Class): 0.0964
  AUC: 0.4444
  Best threshold (F1): 0.50 (F1 = 0.1852)
  Best threshold (Recall): 0.60 (Recall = 1.0000)
  Optimal cutoff from ROC: 0.4833

--- Model: RandomForestClassifier ---

PyComplexityMetric:
  Accuracy: 0.8655
  Recall (Failure Class): 0.4444
  Precision (Failure Class): 0.2667
  F1 (Failure Class): 0.3333
  AUC: 0.8010
  Best threshold (F1): 0.90 (F1 = 0.1417)
  Best threshold (Recall): 0.90 (Recall = 1.0000)
  Optimal cutoff from ROC: 0.2400

MeanAreaMetricEstimator:
  Accuracy: 0.8739
  Recall (Failure Class): 0.4444
  Precision (Failure Class): 0.2857
  F1 (Failure Class): 0.3478
  AUC: 0.7182
  Best threshold (F1): 0.75 (F1 = 0.1417)
  Best threshold (Recall): 0.75 (Recall = 1.0000)
  Optimal cutoff from ROC: 0.5900

AreaMetricEstimator:
  Accuracy: 0.8824
  Recall (Failure Class): 0.4444
  Precision (Failure Class): 0.3077
  F1 (Failure Class): 0.3636
  AUC: 0.8874
  Best threshold (F1): 0.65 (F1 = 0.1452)
  Best threshold (Recall): 0.65 (Recall = 1.0000)
  Optimal cutoff from ROC: 0.0179

ApertureIrregularityMetric:
  Accuracy: 0.8655
  Recall (Failure Class): 0.4444
  Precision (Failure Class): 0.2667
  F1 (Failure Class): 0.3333
  AUC: 0.6500
  Best threshold (F1): 0.85 (F1 = 0.1406)
  Best threshold (Recall): 0.85 (Recall = 1.0000)
  Optimal cutoff from ROC: 0.5900

--- Model: XGBClassifier ---

PyComplexityMetric:
  Accuracy: 0.9244
  Recall (Failure Class): 0.1111
  Precision (Failure Class): 0.5000
  F1 (Failure Class): 0.1818
  AUC: 0.8894
  Best threshold (F1): 0.70 (F1 = 0.1417)
  Best threshold (Recall): 0.70 (Recall = 1.0000)
  Optimal cutoff from ROC: 0.0527

MeanAreaMetricEstimator:
  Accuracy: 0.9160
  Recall (Failure Class): 0.0000
  Precision (Failure Class): 0.0000
  F1 (Failure Class): 0.0000
  AUC: 0.7359
  Best threshold (F1): 0.45 (F1 = 0.1429)
  Best threshold (Recall): 0.45 (Recall = 1.0000)
  Optimal cutoff from ROC: 0.0242

AreaMetricEstimator:
  Accuracy: 0.8824
  Recall (Failure Class): 0.0000
  Precision (Failure Class): 0.0000
  F1 (Failure Class): 0.0000
  AUC: 0.8051
  Best threshold (F1): 0.30 (F1 = 0.1513)
  Best threshold (Recall): 0.30 (Recall = 1.0000)
  Optimal cutoff from ROC: 0.0304

ApertureIrregularityMetric:
  Accuracy: 0.8992
  Recall (Failure Class): 0.1111
  Precision (Failure Class): 0.2000
  F1 (Failure Class): 0.1429
  AUC: 0.6318
  Best threshold (F1): 0.75 (F1 = 0.1406)
  Best threshold (Recall): 0.75 (Recall = 1.0000)
  Optimal cutoff from ROC: 0.3226

=== Best Feature for Failure Detection (recall_class_0) ===
Feature: PyComplexityMetric
Model: LogisticRegression
Score: 0.7778
For PyComplexityMetric, optimal cutoff: 0.6005
Rule: When PyComplexityMetric >= 0.6005, likely to predict failure (Pass Rate < 95)

Analysis complete.
